class Solution {
public:
    int minimumTotal(vector<vector<int>>& triangle) {
        int n = triangle.size();
        vector<int> prev(n, 0);
        prev[0] = triangle[0][0];
        for (int i = 1; i < n; ++i) {
            vector<int> curr(triangle[i].size(), 0);
            for (int j = 0; j < triangle[i].size(); ++j) {
                int path1 = (j > 0) ? triangle[i][j] + prev[j - 1] : INT_MAX;
                int path2 = (j < triangle[i-1].size()) ? triangle[i][j] + prev[j] : INT_MAX;
                curr[j] = min(path1, path2);
            }
            prev = curr;
        }
        return *min_element(prev.begin(), prev.end());
    }
};
