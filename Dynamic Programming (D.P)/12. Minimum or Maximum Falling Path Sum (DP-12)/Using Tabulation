

#include <bits/stdc++.h>
using namespace std;

int getMaxPathSum(vector<vector<int>> &matrix)
{
    int n = matrix.size();
    vector<vector<int>> dp(n, vector<int>(n, INT_MIN));

    for (int j = 0; j < matrix[0].size(); j++)
    {
        dp[0][j] = matrix[0][j];
    }

    // Logic
    for (int i = 1; i < n; i++)
    {
        for (int j = 0; j < matrix[i].size(); j++)
        {
            int down =  dp[i - 1][j];
            int ldown = INT_MIN, rdown = INT_MIN;

            if (j - 1 >= 0)
            {
                ldown =  dp[i - 1][j - 1];
            }
            if (j + 1 < matrix[0].size())
            {
                rdown =  dp[i - 1][j + 1];
            }

            dp[i][j] = matrix[i][j] + max(down, max(ldown, rdown));
        }
    }

    int ans = INT_MIN;
    for (int i = 0; i < matrix[0].size(); i++)
    {
        ans = max(ans, dp[n - 1][i]);
    }

    return ans;
}

