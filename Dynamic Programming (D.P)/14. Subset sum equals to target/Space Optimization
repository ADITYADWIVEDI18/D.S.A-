
#include <bits/stdc++.h> 
bool subsetSumToK(int n, int target, vector<int> &arr) {
    
    // Using Space Optimization 
    vector<bool>prev(target+1,false);

   prev[0]=true;

   if(arr[0]<=target)
   {prev[arr[0]]=true;} 

    for(int i=1;i<n;i++)
    {
      vector<bool>curr(target+1,false);

      curr[0]=true; // If the target sum is 0, we can achieve it by taking no elements

      for(int j=1;j<=target;j++)
      {
          bool NonTake = prev[j];

          bool Take = false;

          if(arr[i]<=j)
          {Take = prev[j-arr[i]]; }

          curr[j]=Take || NonTake;
      }
     swap(curr,prev);
    }

    return prev[target];

}
