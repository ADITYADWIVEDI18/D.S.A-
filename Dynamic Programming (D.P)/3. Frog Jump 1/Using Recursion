Problem Statements : 
Given a number of stairs and a frog, the frog wants to climb from the 0th stair to the (N-1)th stair. 
At a time the frog can climb either one or two steps. A height[N] array is also given.
Whenever the frog jumps from a stair i to stair j, the energy consumed in the jump is abs(height[i]- height[j]),where abs() means the absolute difference.
We need to return the minimum energy that can be used by the frog to jump from stair 0 to stair N-1.

Sample Input 1:
2
4
10 20 30 10
3
10 50 10
Sample Output 1:
20
0

// Using Recursion:

#include <bits/stdc++.h> 

int frogJump(int n, std::vector<int> &heights)
{
    if (n == 0)
    {
        return 0;
    }

    int left = frogJump(n - 1, heights) + abs(heights[n] - heights[n - 1]);

    int right = INT_MAX;

    if (n > 1)
    {
        right = frogJump(n - 2, heights) + abs(heights[n] - heights[n - 2]);
    }

    return std::min(left, right);
}
