int ninjaTraining(int n, vector<vector<int>> &points)
{
    //Dp data structure creation
    vector<vector<int>>dp(n,vector<int>(4,0));

    // Base Values 
    dp[0][0]=max(points[0][1],points[0][2]);
    dp[0][1]=max(points[0][0],points[0][2]);
    dp[0][2]=max(points[0][1],points[0][0]);
    dp[0][3] = max(points[0][0], max(points[0][1], points[0][2]));

    // Iterate through all days
    for(int day=1;day<n;day++)
    {
        //Deciding the last day 
         for(int last=0;last<4;last++)
         {
             dp[day][last]=0;
            //Iterating through each task from first day to last
             for(int task=0;task<=2;task++)
             {
                 if(task!=last)
                 {
                     int activity = points[day][task] + dp[day - 1][task];
                      dp[day][last] = max(dp[day][last], activity);

                 }
             }
         }

    }

      return dp[n - 1][3];


}


